<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="hippocampus">
    <xacro:include filename="$(find fav_sim)/models/bluerov/urdf/bluerov_params.xacro" />
    <xacro:include filename="$(find fav_sim)/models/thruster/urdf/thruster_macro.xacro" />
	
    <xacro:property name="thruster_xy" value="${thruster_r / 2**0.5}" />
    
    <xacro:property name="camera_size" value="0.05" />
    
    <link name="base_link">
        <inertial name="base_link_inertial">
            <mass value="${base_mass}" />
            <inertia ixx="${ixx}" ixy="0.0" ixz="0.0" iyy="${iyy}" iyz="0.0" izz="${izz}" />
        </inertial>
        <visual name="base_link_visual">
            <geometry>
                <mesh filename="file://$(find fav_sim)/models/bluerov/meshes/bluerov.dae" />
            </geometry>
        </visual>
    </link>

    <gazebo>
        <plugin name="buoyancy" filename="libbuoyancy.so">
            <relative_compensation>${buoyancy_compensation}</relative_compensation>
            <origin>${buoyancy_origin}</origin>
        </plugin>
        <plugin name="hydrodynamics" filename="libhydrodynamics.so">
            <added_mass_linear>${added_mass_linear}</added_mass_linear>
            <added_mass_angular>${added_mass_angular}</added_mass_angular>
            <damping_linear>${damping_linear}</damping_linear>
            <damping_angular>${damping_angular}</damping_angular>
        </plugin>
        <plugin name="barometer" filename="libbarometer.so">
            <link>base_link</link>
            <position>${barometer_position}</position>
            <noise>${barometer_noise}</noise>
        </plugin>
        <plugin name="joint_state" filename="libgazebo_ros_joint_state_publisher.so">
            <robotNamespace />
            <jointName>front_starboard_horizontal_thruster_propeller_joint,
                front_port_horizontal_thruster_propeller_joint,
                rear_starboard_horizontal_thruster_propeller_joint,
                rear_port_horizontal_thruster_propeller_joint,
                front_starboard_vertical_thruster_propeller_joint,
                front_port_vertical_thruster_propeller_joint,
                rear_starboard_vertical_thruster_propeller_joint,
                rear_port_vertical_thruster_propeller_joint
            </jointName>
            <updateRate>50.0</updateRate>
        </plugin>
        <plugin name="ground_truth" filename="libgazebo_ros_p3d.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>50.0</updateRate>
            <bodyName>base_link</bodyName>
            <topicName>ground_truth/state</topicName>
            <gaussianNoise>0.0</gaussianNoise>
            <frameName>map</frameName>
            <xyzOffsets>0 0 0</xyzOffsets>
            <rpyOffsets>0 0 0</rpyOffsets>
          </plugin>
        <plugin name="range_sensor_plugin" filename="libgazebo_range_sensor_plugin.so">
	   <robotNamespace />
	   <pubRate>7.0</pubRate>
	   <rangeNoiseStd>0.01</rangeNoiseStd>
	   <fovCamera>100</fovCamera>
	   <viewingAngle>140</viewingAngle>
	   <dropProb>0.02</dropProb>
	   <maxDetectionDist>5.0</maxDetectionDist>
	   <distDropProbExponent>2.0</distDropProbExponent>
	</plugin> 
		  
    
    </gazebo>
    
     <!-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


    <xacro:thruster parent="base_link" suffix="front_starboard_horizontal" xyz="0.14 -0.10 0" rpy="0 0 ${radians(45)}" turning_direction="cw" propeller_direction="cw" color="red" number="0" />
    <xacro:thruster parent="base_link" suffix="front_port_horizontal" xyz="0.14 0.10 0" rpy="0 0 ${radians(-45)}" turning_direction="cw" propeller_direction="cw" color="green" number="1" />
    <xacro:thruster parent="base_link" suffix="rear_starboard_horizontal" xyz="-0.14 -0.10 0" rpy="0 0 ${radians(135)}" turning_direction="ccw" propeller_direction="cw" color="grey" number="2" />
    <xacro:thruster parent="base_link" suffix="rear_port_horizontal" xyz="-0.14 0.10 0" rpy="0 0 ${radians(-135)}" turning_direction="ccw" propeller_direction="cw" color="grey" number="3" />

    <xacro:thruster parent="base_link" suffix="front_starboard_vertical" xyz="0.12 -0.22 0.06" rpy="0 ${radians(-90)} 0" turning_direction="cw" propeller_direction="cw" color="red" number="4" />
    <xacro:thruster parent="base_link" suffix="front_port_vertical" xyz="0.12 0.22 0.06" rpy="0 ${radians(-90)} 0" turning_direction="ccw" propeller_direction="cw" color="green" number="5" />
    <xacro:thruster parent="base_link" suffix="rear_starboard_vertical" xyz="-0.12 -0.22 0.06" rpy="0 ${radians(-90)} 0" turning_direction="ccw" propeller_direction="cw" color="grey" number="6" />
    <xacro:thruster parent="base_link" suffix="rear_port_vertical" xyz="-0.12 0.22 0.06" rpy="0 ${radians(-90)} 0" turning_direction="cw" propeller_direction="cw" color="grey" number="7" />

   <!-- <xacro:camera_macro parent="base_link" prefix="vertical_camera" xyz="${camera_position}" rpy="0 ${radians(90)} 0" /> -->


<joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.2 0 0" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>

  <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  
  
</robot>
